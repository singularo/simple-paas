#!/bin/bash
#
# Part of Simple paas
#
# Script to be used in local docker containers to retrieve backups for local testing.
#

set -euo pipefail

if [ ! -f /.dockerenv ]; then
  echo "This command should be run inside docker."
  exit 1;
fi

if [ $# -eq 1 ]; then
  SNAPSHOT=${1}
fi

#PROJECT=example
REMOTE=${PROJECT}@myhosting.com

mkdir -p .secrets
if [ ! -f .secrets/b2_key ]; then
  echo "Retrieving B2 key."
  ssh ${REMOTE} "cat /sites/${PROJECT}/b2_key" > .secrets/b2_key
fi
KEY=$(cat .secrets/b2_key)
export B2_ACCOUNT_ID=$(echo "${KEY}" | awk '{ print $1 }')
export B2_ACCOUNT_KEY=$(echo "${KEY}" | awk '{ print $2 }')

if [ ! -f .secrets/restic_pass ]; then
  echo "Retrieving Restic password."
  ssh ${REMOTE} "cat /sites/${PROJECT}/restic_pass" > .secrets/restic_pass
fi
export RESTIC_PASSWORD=$(cat .secrets/restic_pass)

if [ ! -f .secrets/b2_bucket ]; then
  echo "Retrieving b2 bucket."
  ssh ${REMOTE} "cat /etc/simple-paas/sp_config | grep B2_BUCKET | cut -d'=' -f2" > .secrets/b2_bucket
fi
export B2_BUCKET=$(cat .secrets/b2_bucket)

export RESTIC_REPOSITORY="b2:${B2_BUCKET}:${PROJECT}"
export RESTIC_CACHE_DIR=/shared/restic

echo "Usage before restore"
du -msh /shared

set +u
if [ -z ${SNAPSHOT} ]; then
  set -u
  echo "Restoring shared files and sql as root."
  sudo -E restic snapshots

  echo "Enter a specific snapshot, or edit the default and confirm with enter?"
  read -i latest -e -p 'Snapshot to restore?: ' SNAPSHOT
fi
set -u

echo "Restoring snapshot ${SNAPSHOT}."
sudo -E restic restore --target / ${SNAPSHOT}

echo "Fixing permissions for local dev."
sudo chown www-data:www-data -R /shared

echo "Usage after restore"
du -msh /shared

echo "Importing sql"
robo dev:import-db /shared/sql/${PROJECT}.sql
